# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!
name: Crossbow
on:
  push:
    branches:
      - "*-github-*"

env:
  ARCHERY_DEBUG: 1


jobs:
  as-cran:
    name: "rhub/${{ matrix.config.r_image }}"
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        config:
          # See https://r-hub.github.io/containers/
          - { r_image: "ubuntu-gcc12" }  # ~ r-devel-linux-x86_64-debian-gcc
          - { r_image: "ubuntu-clang" }  # ~ r-devel-linux-x86_64-debian-clang
          - { r_image: "ubuntu-next" }  # ~ r-patched-linux-x86_64
          - { r_image: "ubuntu-release" }  # ~ r-release-linux-x86_64
          - { r_image: "clang20", skip_vignettes: true, r_update_clang: true }  # ~ r-devel-linux-x86_64-fedora-clang
    env:
      R_ORG: "rhub"
      R_IMAGE: ${{ matrix.config.r_image }}
      R_TAG: "latest"
      ARROW_R_DEV: "FALSE"
      R_UPDATE_CLANG: ${{ matrix.config.r_update_clang }}
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: arrow
          repository: apache/arrow
          ref: 08b3cc9cb1190fb2d80cc62decc2b10a9a7d0890
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          cache: 'pip'
          python-version: 3.12
      - name: Install Archery
        shell: bash
        run: pip install -e arrow/dev/archery[all]


      - name: Docker Run
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          SCCACHE_BUCKET: "${{ secrets.SCCACHE_BUCKET }}"
          SCCACHE_REGION: "${{ secrets.SCCACHE_REGION }}"
          SCCACHE_S3_KEY_PREFIX: "sccache"

        # setting ARROW_SOURCE_HOME='' here ensures that we use the cpp source copied into tools/
        run: archery docker run -e ARROW_SOURCE_HOME='' -e SKIP_VIGNETTES=${{ matrix.config.skip_vignettes }} r
      - name: Dump install logs
        run: cat arrow/r/check/arrow.Rcheck/00install.out
        if: always()
      - name: Dump test logs
        run: cat arrow/r/check/arrow.Rcheck/tests/testthat.Rout*
        if: always()
      - name: Save the test output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-output-${{ matrix.config.r_image }}
          path: arrow/r/check/arrow.Rcheck/tests/testthat.Rout*