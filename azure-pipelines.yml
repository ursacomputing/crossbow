# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

jobs:
- job: linux
  pool:
    vmImage: ubuntu-latest
  timeoutInMinutes: 360
  steps:
  - script: |
      git clone --no-checkout --branch main https://github.com/apache/arrow arrow
      git -C arrow checkout 5f4ba59056ec091570fa58603af02dd1200ff718
      git -C arrow submodule update --init --recursive
    displayName: Clone arrow

  - script: arrow/ci/scripts/util_free_space.sh
    displayName: Free up disk space


  - script: |
      set -ex
      docker -v
      docker compose version
      cd arrow
      export R_ORG=rhub
      export R_IMAGE=ubuntu-release
      export R_TAG=latest
      export R_CUSTOM_CCACHE=false
      docker compose pull --ignore-pull-failures r
      docker compose build r
    displayName: Docker build
    env:
      AWS_ACCESS_KEY_ID: "$(AWS_ACCESS_KEY_ID)"
      AWS_SECRET_ACCESS_KEY: "$(AWS_SECRET_ACCESS_KEY)"
      SCCACHE_BUCKET: "$(SCCACHE_BUCKET)"
      SCCACHE_REGION: "$(SCCACHE_REGION)"
      SCCACHE_S3_KEY_PREFIX: "sccache"


  - script: |
      set -ex
      cd arrow
      export R_ORG=rhub
      export R_IMAGE=ubuntu-release
      export R_TAG=latest
      export ARROW_R_DEV=TRUE
      # Note that by default, ci/scripts/r_test.sh sets NOT_CRAN=true
      # if ARROW_R_DEV=TRUE. Pass `-e NOT_CRAN=false` to turn that off.
      docker compose run  r
    displayName: Docker run
    env:
      AWS_ACCESS_KEY_ID: "$(AWS_ACCESS_KEY_ID)"
      AWS_SECRET_ACCESS_KEY: "$(AWS_SECRET_ACCESS_KEY)"
      SCCACHE_BUCKET: "$(SCCACHE_BUCKET)"
      SCCACHE_REGION: "$(SCCACHE_REGION)"
      SCCACHE_S3_KEY_PREFIX: "sccache"


  - script: |
      set -ex
      cat arrow/r/check/arrow.Rcheck/00install.out
    displayName: Dump install logs
    condition: succeededOrFailed()
  - script: |
      set -ex
      cat arrow/r/check/arrow.Rcheck/tests/testthat.Rout*
    displayName: Dump test logs
    condition: succeededOrFailed()